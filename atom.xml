<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://dopsie.github.io/atom.xml" rel="self"/>
  
  <link href="http://dopsie.github.io/"/>
  <updated>2020-08-21T10:05:37.567Z</updated>
  <id>http://dopsie.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown 语法基础</title>
    <link href="http://dopsie.github.io/2020/08/19/Markdown/"/>
    <id>http://dopsie.github.io/2020/08/19/Markdown/</id>
    <published>2020-08-19T07:31:52.000Z</published>
    <updated>2020-08-21T10:05:37.567Z</updated>
    
    <content type="html"><![CDATA[<p><strong>记录 markdown 基本语法规则，以便于随时查看。</strong>  </p><hr><h2 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1. 基本语法"></a>1. 基本语法</h2><h3 id="1-1-段落与换行"><a href="#1-1-段落与换行" class="headerlink" title="1.1 段落与换行"></a>1.1 段落与换行</h3><ul><li>段落的前后必须是空行：<br>空行是指行内什么都没有，或者只有空白符（空格或制表符）。<br>相邻的两行文本，如果中间没有空行，会显示在一行中（换行符被替换为空格）。</li><li>如需在段落内加入换行，可在前一行的末尾添加至少两个空格，然后再换行。</li><li>Markdown中的多数区块都需要在两个空行之间。  </li></ul><h3 id="1-2-标题"><a href="#1-2-标题" class="headerlink" title="1.2 标题"></a>1.2 标题</h3><ul><li>在标题文字前添加（#）符号表示标题。（#）符号数量代表标题级数，最多支持6级标题。 也可使用对称的（#）符号。<br><code># 一号标题</code><br><code># 一号标题 #</code><br><code>## 二号标题</code><br><code>## 二号标题 ##</code>  </li><li>也可使用（=）或（-）符号添加在标题下一行。符号数量无限制，（=）表示一级标题，（-）表示二级标题。<br><code>一级标题</code><br><code>=====</code><br><code>二级标题</code><br><code>-----</code></li></ul><h3 id="1-3-字体"><a href="#1-3-字体" class="headerlink" title="1.3 字体"></a>1.3 字体</h3><ul><li>斜体： 在斜体文字前后分别添加一个（*）符号。<br><code>*这是一个斜体*</code><br><em>这是一个斜体</em></li><li>加粗： 在加粗文字前后分别添加两个（*）符号。<br><code>**这是一个加粗**</code><br><strong>这是一个加粗</strong></li><li>斜体加粗：在斜体加粗文字前后分别添加三个（<em>）符号。<br>`` **</em>这是一个斜体加粗*** ``<br><strong><em>这是一个斜体加粗</em></strong></li><li>删除线：在删除线文字前后分别添加两个（<del>）符号。<br>`` ~这是一个删除线</del> ``<br><del>这是一个删除线</del></li></ul><h3 id="1-4-引用"><a href="#1-4-引用" class="headerlink" title="1.4 引用"></a>1.4 引用</h3><ul><li>在引用的文字前添加（&gt;）符号即可。引用也可以嵌套，例如两个（&gt;&gt;），或三个（&gt;&gt;&gt;）。<br><code>&gt;这是一个引用</code><br><code>&gt;&gt;这是一个二级引用</code><br><code>&gt;&gt;&gt;这是一个三级引用</code><blockquote><p>这是一个引用</p><blockquote><p>这是一个二级引用</p><blockquote><p>这是一个三级引用</p></blockquote></blockquote></blockquote></li></ul><h3 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h3><ul><li>三个或三个以上的（-）、（*）、（_）符号。例如（- - -）、（***）、（___），每个字符间可添加空格。注意：短横线作为分割线时请补充空格，否则会被识别为二级标题。<br><code>- - -</code><br><code>***</code><br><code>___</code>  <hr><hr><hr></li></ul><h3 id="1-6-列表"><a href="#1-6-列表" class="headerlink" title="1.6 列表"></a>1.6 列表</h3><ul><li>可以使用（*）、（+）、（-）+ 空格 标记无序列表。<br><code>*</code><br><code>+</code><br><code>-</code></li><li>有序列表以 数字 +（.）+ 空格 标记，推荐按照自然数标记。<br><code>1.</code><br><code>2.</code><br><code>3.</code>  </li><li>有序列表和无需列表可以互相嵌套，符号后的字符至少一个，多个空格将被解析为一个。</li></ul><h3 id="1-7-代码"><a href="#1-7-代码" class="headerlink" title="1.7 代码"></a>1.7 代码</h3><ul><li>可以使用若干个（`）符号，表示行内代码。<br><code>` example code `</code><br><code>`` example code ``</code></li><li>在代码中使用（`）符号，可通过使用大于需要使用的符号数的（`）符号包裹，例如上面的代码块中有1或2个（`）符号，则使用2或3个（`）符号包裹这段代码。<br><code>`` ` example code ` ``</code></li></ul><h3 id="1-8-超链接"><a href="#1-8-超链接" class="headerlink" title="1.8 超链接"></a>1.8 超链接</h3><ul><li>行内式语法：<code>[链接文字](链接地址 &quot;链接标题&quot;) </code>。<br>链接文字：链接显示的文字。<br>链接地址：链接的地址。<br>链接标题：鼠标悬浮时显示的内容，可不填。<br><a href="www.google.com" title="咕噜咕噜">Google</a></li><li>参考式语法：<code>[链接文字][识别符]</code>。<br>链接文字：连接显示的文字。<br>标识符：链接的标识符，用于在同一处统一管理链接，可不填，不填时默认为链接文字。<br>标识符定义连接内容：<code>[标识符]: 链接地址 &quot;链接标题&quot;</code>。<br>例如：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Google][googleLink]</span><br><span class="line">[moyu][]</span><br><span class="line">[googleLink]: www.google.com &quot;咕噜咕噜&quot;</span><br><span class="line">[moyu]: mo.fish &quot;下班下班&quot;</span><br></pre></td></tr></table></figure><a href="www.google.com" title="咕噜咕噜">Google</a><br><a href="mo.fish" title="下班下班">moyu</a>  </li></ul><h3 id="1-9-图片"><a href="#1-9-图片" class="headerlink" title="1.9 图片"></a>1.9 图片</h3><p>图片的语法同超链接，只是在最前面多一个（!）符号。</p><ul><li>行内式语法：<code>![图片alt](图片地址 &quot;图片标题&quot;)</code>。<br>图片alt：图片下方注释文字。<br>图片地址：图片的连接地址。<br>图片标题：鼠标悬浮时显示的文字，可不填。<br><code>![panda](https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 &quot;pandadada&quot;)</code><br><img src="https://avatars2.githubusercontent.com/u/3265208?v=3&s=100" alt="panda" title="pandadada"></li><li>参考式语法：<code>![图片alt][标识符]</code>。<br>标识符定义图片内容：<code>[标识符]: 图片地址 &quot;图片标题&quot;</code>。<br>例如：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![panda][pandaPic]</span><br><span class="line">[pandaPic]: https:&#x2F;&#x2F;avatars2.githubusercontent.com&#x2F;u&#x2F;3265208?v&#x3D;3&amp;s&#x3D;100 &quot;pandadada&quot;</span><br></pre></td></tr></table></figure><img src="https://avatars2.githubusercontent.com/u/3265208?v=3&s=100" alt="panda" title="pandadada">  </li></ul><h3 id="1-10-字符转义"><a href="#1-10-字符转义" class="headerlink" title="1.10 字符转义"></a>1.10 字符转义</h3><ul><li>反斜杠（\）用于插入在Markdown语法中的预留符号。包括<br><code>\  `  *  _  &#123;&#125;  []  ()  #  +  -  .  !</code></li></ul><h2 id="2-扩展语法"><a href="#2-扩展语法" class="headerlink" title="2. 扩展语法"></a>2. 扩展语法</h2><h3 id="2-1-代码块和语法高亮"><a href="#2-1-代码块和语法高亮" class="headerlink" title="2.1 代码块和语法高亮"></a>2.1 代码块和语法高亮</h3><ul><li>代码块。可使用三个或以上个（`）包裹多行代码表示代码块，（`）符号需要独占一行。  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line">  example code line 1</span><br><span class="line">  example code line 2</span><br><span class="line">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">example code line 1</span><br><span class="line">example code line 2</span><br></pre></td></tr></table></figure></li><li>代码高亮。在以上基础上，在开始的（`）符号后添加代码块的语言，如 javascript 或 js，即可将代码标记为 JavaScript。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;js</span><br><span class="line">  window.addEventListener(&#39;load&#39;, function() &#123;</span><br><span class="line">      console.log(&#39;window loaded&#39;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&#x27;window loaded&#x27;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string">* 若需在代码块中显示（\`）符号，可使用大于需要显示的符号数量的（\`）符号包裹，例如：</span></span><br><span class="line"><span class="string">  `</span><span class="string">``</span><span class="string">``</span></span><br><span class="line">  <span class="string">``</span><span class="string">``</span></span><br></pre></td></tr></table></figure>example code<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  &#96;&#96;&#96;&#96;</span><br><span class="line">  &#96;&#96;&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line">### 2.2 表格</span><br><span class="line">* 单元格和表头。使用（|）来分隔单元格，使用（-）来分隔表头和其他行。可使用（|）标记表格边界。  </span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>Mike</td><td>20</td></tr><tr><td>Ptao</td><td>2</td></tr></tbody></table>```<table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>Mike</td><td>20</td></tr><tr><td>Ptao</td><td>2</td></tr></tbody></table></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;记录 markdown 基本语法规则，以便于随时查看。&lt;/strong&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-基本语法&quot;&gt;&lt;a href=&quot;#1-基本语法&quot; class=&quot;headerlink&quot; title=&quot;1. 基本语法&quot;&gt;&lt;/a&gt;1. 基本语法&lt;</summary>
      
    
    
    
    
    <category term="markdown" scheme="http://dopsie.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://dopsie.github.io/2020/08/19/hello-world/"/>
    <id>http://dopsie.github.io/2020/08/19/hello-world/</id>
    <published>2020-08-19T02:05:08.987Z</published>
    <updated>2020-08-19T02:05:08.987Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
