{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://dopsie.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2020-08-21T08:57:13.540Z","updated":"2020-08-21T08:57:13.538Z","comments":false,"path":"/404.html","permalink":"http://dopsie.github.io/404.html","excerpt":"","text":""},{"title":"关于","date":"2020-08-21T08:57:13.575Z","updated":"2020-08-21T08:57:13.574Z","comments":false,"path":"about/index.html","permalink":"http://dopsie.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2020-08-21T08:57:13.618Z","updated":"2020-08-21T08:57:13.616Z","comments":false,"path":"books/index.html","permalink":"http://dopsie.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-08-21T08:57:13.654Z","updated":"2020-08-21T08:57:13.654Z","comments":false,"path":"categories/index.html","permalink":"http://dopsie.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-08-21T08:57:13.690Z","updated":"2020-08-21T08:57:13.690Z","comments":true,"path":"links/index.html","permalink":"http://dopsie.github.io/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2020-08-21T08:57:13.713Z","updated":"2020-08-21T08:57:13.712Z","comments":false,"path":"repository/index.html","permalink":"http://dopsie.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-08-21T08:57:13.733Z","updated":"2020-08-21T08:57:13.733Z","comments":false,"path":"tags/index.html","permalink":"http://dopsie.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Think in Java（读书笔记）【1】","slug":"Think-in-Java（读书笔记）【1】","date":"2020-08-24T02:26:59.000Z","updated":"2020-08-25T10:01:39.966Z","comments":true,"path":"2020/08/24/Think-in-Java（读书笔记）【1】/","link":"","permalink":"http://dopsie.github.io/2020/08/24/Think-in-Java%EF%BC%88%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%89%E3%80%901%E3%80%91/","excerpt":"","text":"Think in java 读书笔记系列，抄录阅读本书时的一些片段，记录一些读书时的想法。 写在前面的话 程序设计对复杂性的操控有很大的关系：对于一个准备解决的问题，它的复杂程度取决用于解决它的机器的复杂程度。 引言 不可将 Java 简单想象成一系列特性的集合；如孤立地看，有些特性是没有任何意义的。只有在考虑“设计”、而非考虑简单的编码时，才可真正体会到 Java 的强大。 第一章 1.7.2 单根结构：所有类最终都单独从一个基础类继承单根结构可以保证所有的类都属于一个基本类型；可以保证所有的类都有一些特定的功能；利用单根结构，可以更方便的实现一个垃圾收集器;不会出现判断不出一个对象的类型的情况；","categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://dopsie.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"}]},{"title":"Markdown 语法基础","slug":"Markdown","date":"2020-08-19T07:31:52.000Z","updated":"2020-08-24T06:11:50.848Z","comments":true,"path":"2020/08/19/Markdown/","link":"","permalink":"http://dopsie.github.io/2020/08/19/Markdown/","excerpt":"","text":"记录 markdown 基本语法规则，以便于随时查看。 1. 基本语法1.1 段落与换行 段落的前后必须是空行：空行是指行内什么都没有，或者只有空白符（空格或制表符）。相邻的两行文本，如果中间没有空行，会显示在一行中（换行符被替换为空格）。 如需在段落内加入换行，可在前一行的末尾添加至少两个空格，然后再换行。 Markdown中的多数区块都需要在两个空行之间。 1.2 标题 在标题文字前添加（#）符号表示标题。（#）符号数量代表标题级数，最多支持6级标题。 也可使用对称的（#）符号。# 一号标题# 一号标题 ### 二号标题## 二号标题 ## 也可使用（=）或（-）符号添加在标题下一行。符号数量无限制，（=）表示一级标题，（-）表示二级标题。一级标题=====二级标题----- 1.3 字体 斜体： 在斜体文字前后分别添加一个（*）符号。*这是一个斜体*这是一个斜体 加粗： 在加粗文字前后分别添加两个（*）符号。**这是一个加粗**这是一个加粗 斜体加粗：在斜体加粗文字前后分别添加三个（）符号。`` **这是一个斜体加粗*** ``这是一个斜体加粗 删除线：在删除线文字前后分别添加两个（）符号。`` ~这是一个删除线 ``这是一个删除线 1.4 引用 在引用的文字前添加（&gt;）符号即可。引用也可以嵌套，例如两个（&gt;&gt;），或三个（&gt;&gt;&gt;）。&gt;这是一个引用&gt;&gt;这是一个二级引用&gt;&gt;&gt;这是一个三级引用 这是一个引用 这是一个二级引用 这是一个三级引用 1.5 分割线 三个或三个以上的（-）、（*）、（_）符号。例如（- - -）、（***）、（___），每个字符间可添加空格。注意：短横线作为分割线时请补充空格，否则会被识别为二级标题。- - -***___ 1.6 列表 可以使用（*）、（+）、（-）+ 空格 标记无序列表。*+- 有序列表以 数字 +（.）+ 空格 标记，推荐按照自然数标记。1.2.3. 有序列表和无需列表可以互相嵌套，符号后的字符至少一个，多个空格将被解析为一个。 1.7 代码 可以使用若干个（`）符号，表示行内代码。` example code ``` example code `` 在代码中使用（`）符号，可通过使用大于需要使用的符号数的（`）符号包裹，例如上面的代码块中有1或2个（`）符号，则使用2或3个（`）符号包裹这段代码。`` ` example code ` `` 1.8 超链接 行内式语法：[链接文字](链接地址 &quot;链接标题&quot;) 。链接文字：链接显示的文字。链接地址：链接的地址。链接标题：鼠标悬浮时显示的内容，可不填。Google 参考式语法：[链接文字][识别符]。链接文字：连接显示的文字。标识符：链接的标识符，用于在同一处统一管理链接，可不填，不填时默认为链接文字。标识符定义连接内容：[标识符]: 链接地址 &quot;链接标题&quot;。例如：1234[Google][googleLink][moyu][][googleLink]: www.google.com &quot;咕噜咕噜&quot;[moyu]: mo.fish &quot;下班下班&quot; Googlemoyu 1.9 图片图片的语法同超链接，只是在最前面多一个（!）符号。 行内式语法：![图片alt](图片地址 &quot;图片标题&quot;)。图片alt：图片下方注释文字。图片地址：图片的连接地址。图片标题：鼠标悬浮时显示的文字，可不填。![panda](https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 &quot;pandadada&quot;) 参考式语法：![图片alt][标识符]。标识符定义图片内容：[标识符]: 图片地址 &quot;图片标题&quot;。例如：12![panda][pandaPic][pandaPic]: https:&#x2F;&#x2F;avatars2.githubusercontent.com&#x2F;u&#x2F;3265208?v&#x3D;3&amp;s&#x3D;100 &quot;pandadada&quot; 1.10 字符转义 反斜杠（\\）用于插入在Markdown语法中的预留符号。包括\\ ` * _ &#123;&#125; [] () # + - . ! 2. 扩展语法2.1 代码块和语法高亮 代码块。可使用三个或以上个（`）包裹多行代码表示代码块，（`）符号需要独占一行。 1234&#96;&#96;&#96; example code line 1 example code line 2&#96;&#96;&#96; 12example code line 1example code line 2 代码高亮。在以上基础上，在开始的（`）符号后添加代码块的语言，如 javascript 或 js，即可将代码标记为 JavaScript。12345&#96;&#96;&#96;js window.addEventListener(&#39;load&#39;, function() &#123; console.log(&#39;window loaded&#39;); &#125;);&#96;&#96;&#96; 123window.addEventListener(&#x27;load&#x27;, function() &#123; console.log(&#x27;window loaded&#x27;);&#125;); 2.2 表格 单元格和表头。使用（|）来分隔单元格，使用（-）来分隔表头和其他行。可使用（|）标记表格边界。 1234|name | age ||---- | ----||Mike | 20 ||Ptao | 2 | name age Mike 20 Ptao 2 对齐。在表头下方的分割线中加入标记（:），即可标记该列单元格的对齐方式。（:—）：左对齐，（—:）：右对齐，（:—:）：居中。1234| left | center | right || :--- | :----: | ----: || aaaa | bbbbbb | ccccc || a | b | c | left center right aaaa bbbbbb ccccc a b c 2.3 待办列表 语法：- [ ]，或 - [x]。注意中括号前后都有空格，不选中状态时中括号中有一个空格。- [ ] 快乐 - [x] 玩10局亚索 - [ ] 玩10局永恩 - [x] 0/10/0 快乐 玩10局亚索 玩10局永恩 0/10/0","categories":[],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://dopsie.github.io/tags/markdown/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-08-19T02:05:08.987Z","updated":"2020-08-19T02:05:08.987Z","comments":true,"path":"2020/08/19/hello-world/","link":"","permalink":"http://dopsie.github.io/2020/08/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://dopsie.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"name":"markdown","slug":"markdown","permalink":"http://dopsie.github.io/tags/markdown/"}]}